{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport TimeUnitColumn from './TimeUnitColumn';\nimport { leftPad } from '../../utils/miscUtil';\nimport { setTime as utilSetTime } from '../../utils/timeUtil';\n\nfunction shouldUnitsUpdate(prevUnits, nextUnits) {\n  if (prevUnits.length !== nextUnits.length) return true; // if any unit's disabled status is different, the units should be re-evaluted\n\n  for (var i = 0; i < prevUnits.length; i += 1) {\n    if (prevUnits[i].disabled !== nextUnits[i].disabled) return true;\n  }\n\n  return false;\n}\n\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n\n  for (var i = start; i <= end; i += step) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n\n  return units;\n}\n\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n      prefixCls = props.prefixCls,\n      operationRef = props.operationRef,\n      activeColumnIndex = props.activeColumnIndex,\n      value = props.value,\n      showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      use12Hours = props.use12Hours,\n      _props$hourStep = props.hourStep,\n      hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n      _props$minuteStep = props.minuteStep,\n      minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n      _props$secondStep = props.secondStep,\n      secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n      disabledHours = props.disabledHours,\n      disabledMinutes = props.disabledMinutes,\n      disabledSeconds = props.disabledSeconds,\n      hideDisabledOptions = props.hideDisabledOptions,\n      onSelect = props.onSelect;\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var hour = value ? generateConfig.getHour(value) : -1;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  }; // ========================= Unit =========================\n\n\n  var rawHours = generateUnits(0, 23, hourStep, disabledHours && disabledHours());\n  var memorizedRawHours = useMemo(function () {\n    return rawHours;\n  }, rawHours, shouldUnitsUpdate); // Should additional logic to handle 12 hours\n\n  if (use12Hours) {\n    isPM = hour >= 12; // -1 means should display AM\n\n    hour %= 12;\n  }\n\n  var _React$useMemo = React.useMemo(function () {\n    if (!use12Hours) {\n      return [false, false];\n    }\n\n    var AMPMDisabled = [true, true];\n    memorizedRawHours.forEach(function (_ref) {\n      var disabled = _ref.disabled,\n          hourValue = _ref.value;\n      if (disabled) return;\n\n      if (hourValue >= 12) {\n        AMPMDisabled[1] = false;\n      } else {\n        AMPMDisabled[0] = false;\n      }\n    });\n    return AMPMDisabled;\n  }, [use12Hours, memorizedRawHours]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      AMDisabled = _React$useMemo2[0],\n      PMDisabled = _React$useMemo2[1];\n\n  var hours = React.useMemo(function () {\n    if (!use12Hours) return memorizedRawHours;\n    return memorizedRawHours.filter(isPM ? function (hourMeta) {\n      return hourMeta.value >= 12;\n    } : function (hourMeta) {\n      return hourMeta.value < 12;\n    }).map(function (hourMeta) {\n      var hourValue = hourMeta.value % 12;\n      var hourLabel = hourValue === 0 ? '12' : leftPad(hourValue, 2);\n      return _objectSpread(_objectSpread({}, hourMeta), {}, {\n        label: hourLabel,\n        value: hourValue\n      });\n    });\n  }, [use12Hours, memorizedRawHours]);\n  var minutes = generateUnits(0, 59, minuteStep, disabledMinutes && disabledMinutes(hour));\n  var seconds = generateUnits(0, 59, secondStep, disabledSeconds && disabledSeconds(hour, minute)); // ====================== Operations ======================\n\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  }; // ======================== Render ========================\n\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  } // Hour\n\n\n  addColumnNode(showHour, React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  }); // Minute\n\n  addColumnNode(showMinute, React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  }); // Second\n\n  addColumnNode(showSecond, React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  }); // 12 Hours\n\n  var PMIndex = -1;\n\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n\n  addColumnNode(use12Hours === true, React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0,\n    disabled: AMDisabled\n  }, {\n    label: 'PM',\n    value: 1,\n    disabled: PMDisabled\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  }));\n}\n\nexport default TimeBody;","map":{"version":3,"names":["_objectSpread","_slicedToArray","React","useMemo","TimeUnitColumn","leftPad","setTime","utilSetTime","shouldUnitsUpdate","prevUnits","nextUnits","length","i","disabled","generateUnits","start","end","step","disabledUnits","units","push","label","value","includes","TimeBody","props","generateConfig","prefixCls","operationRef","activeColumnIndex","showHour","showMinute","showSecond","use12Hours","_props$hourStep","hourStep","_props$minuteStep","minuteStep","_props$secondStep","secondStep","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","onSelect","columns","contentPrefixCls","concat","columnPrefixCls","isPM","hour","getHour","minute","getMinute","second","getSecond","isNewPM","newHour","newMinute","newSecond","newDate","getNow","mergedHour","Math","max","mergedMinute","mergedSecond","rawHours","memorizedRawHours","_React$useMemo","AMPMDisabled","forEach","_ref","hourValue","_React$useMemo2","AMDisabled","PMDisabled","hours","filter","hourMeta","map","hourLabel","minutes","seconds","current","onUpDown","diff","column","valueIndex","findIndex","unit","unitLen","nextUnit","addColumnNode","condition","node","columnValue","onColumnSelect","cloneElement","active","createElement","key","num","PMIndex","className","_ref2"],"sources":["/Users/jiayue/7381-website/node_modules/rc-picker/es/panels/TimePanel/TimeBody.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport TimeUnitColumn from './TimeUnitColumn';\nimport { leftPad } from '../../utils/miscUtil';\nimport { setTime as utilSetTime } from '../../utils/timeUtil';\n\nfunction shouldUnitsUpdate(prevUnits, nextUnits) {\n  if (prevUnits.length !== nextUnits.length) return true; // if any unit's disabled status is different, the units should be re-evaluted\n\n  for (var i = 0; i < prevUnits.length; i += 1) {\n    if (prevUnits[i].disabled !== nextUnits[i].disabled) return true;\n  }\n\n  return false;\n}\n\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n\n  for (var i = start; i <= end; i += step) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n\n  return units;\n}\n\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n      prefixCls = props.prefixCls,\n      operationRef = props.operationRef,\n      activeColumnIndex = props.activeColumnIndex,\n      value = props.value,\n      showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      use12Hours = props.use12Hours,\n      _props$hourStep = props.hourStep,\n      hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n      _props$minuteStep = props.minuteStep,\n      minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n      _props$secondStep = props.secondStep,\n      secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n      disabledHours = props.disabledHours,\n      disabledMinutes = props.disabledMinutes,\n      disabledSeconds = props.disabledSeconds,\n      hideDisabledOptions = props.hideDisabledOptions,\n      onSelect = props.onSelect;\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var hour = value ? generateConfig.getHour(value) : -1;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  }; // ========================= Unit =========================\n\n\n  var rawHours = generateUnits(0, 23, hourStep, disabledHours && disabledHours());\n  var memorizedRawHours = useMemo(function () {\n    return rawHours;\n  }, rawHours, shouldUnitsUpdate); // Should additional logic to handle 12 hours\n\n  if (use12Hours) {\n    isPM = hour >= 12; // -1 means should display AM\n\n    hour %= 12;\n  }\n\n  var _React$useMemo = React.useMemo(function () {\n    if (!use12Hours) {\n      return [false, false];\n    }\n\n    var AMPMDisabled = [true, true];\n    memorizedRawHours.forEach(function (_ref) {\n      var disabled = _ref.disabled,\n          hourValue = _ref.value;\n      if (disabled) return;\n\n      if (hourValue >= 12) {\n        AMPMDisabled[1] = false;\n      } else {\n        AMPMDisabled[0] = false;\n      }\n    });\n    return AMPMDisabled;\n  }, [use12Hours, memorizedRawHours]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      AMDisabled = _React$useMemo2[0],\n      PMDisabled = _React$useMemo2[1];\n\n  var hours = React.useMemo(function () {\n    if (!use12Hours) return memorizedRawHours;\n    return memorizedRawHours.filter(isPM ? function (hourMeta) {\n      return hourMeta.value >= 12;\n    } : function (hourMeta) {\n      return hourMeta.value < 12;\n    }).map(function (hourMeta) {\n      var hourValue = hourMeta.value % 12;\n      var hourLabel = hourValue === 0 ? '12' : leftPad(hourValue, 2);\n      return _objectSpread(_objectSpread({}, hourMeta), {}, {\n        label: hourLabel,\n        value: hourValue\n      });\n    });\n  }, [use12Hours, memorizedRawHours]);\n  var minutes = generateUnits(0, 59, minuteStep, disabledMinutes && disabledMinutes(hour));\n  var seconds = generateUnits(0, 59, secondStep, disabledSeconds && disabledSeconds(hour, minute)); // ====================== Operations ======================\n\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  }; // ======================== Render ========================\n\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  } // Hour\n\n\n  addColumnNode(showHour, React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  }); // Minute\n\n  addColumnNode(showMinute, React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  }); // Second\n\n  addColumnNode(showSecond, React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  }); // 12 Hours\n\n  var PMIndex = -1;\n\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n\n  addColumnNode(use12Hours === true, React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0,\n    disabled: AMDisabled\n  }, {\n    label: 'PM',\n    value: 1,\n    disabled: PMDisabled\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  }));\n}\n\nexport default TimeBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}