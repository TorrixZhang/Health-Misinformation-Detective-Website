{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport copy from 'copy-to-clipboard';\nimport omit from 'omit.js';\nimport EditOutlined from '@ant-design/icons/EditOutlined';\nimport CheckOutlined from '@ant-design/icons/CheckOutlined';\nimport CopyOutlined from '@ant-design/icons/CopyOutlined';\nimport ResizeObserver from 'rc-resize-observer';\nimport { configConsumerProps, ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport devWarning from '../_util/devWarning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport isStyleSupport from '../_util/styleChecker';\nimport Tooltip from '../tooltip';\nimport Typography from './Typography';\nimport Editable from './Editable';\nimport measure from './util';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  return currentContent;\n}\n\nvar ELLIPSIS_STR = '...';\n\nvar Base = /*#__PURE__*/function (_React$Component) {\n  _inherits(Base, _React$Component);\n\n  var _super = _createSuper(Base);\n\n  function Base() {\n    var _this;\n\n    _classCallCheck(this, Base);\n\n    _this = _super.apply(this, arguments);\n    _this.contentRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      edit: false,\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false\n    };\n\n    _this.getPrefixCls = function () {\n      var customizePrefixCls = _this.props.prefixCls;\n      var getPrefixCls = _this.context.getPrefixCls;\n      return getPrefixCls('typography', customizePrefixCls);\n    }; // =============== Expand ===============\n\n\n    _this.onExpandClick = function (e) {\n      var _this$getEllipsis = _this.getEllipsis(),\n          onExpand = _this$getEllipsis.onExpand;\n\n      _this.setState({\n        expanded: true\n      });\n\n      if (onExpand) {\n        onExpand(e);\n      }\n    }; // ================ Edit ================\n\n\n    _this.onEditClick = function () {\n      _this.triggerEdit(true);\n    };\n\n    _this.onEditChange = function (value) {\n      var _this$getEditable = _this.getEditable(),\n          onChange = _this$getEditable.onChange;\n\n      if (onChange) {\n        onChange(value);\n      }\n\n      _this.triggerEdit(false);\n    };\n\n    _this.onEditCancel = function () {\n      _this.triggerEdit(false);\n    }; // ================ Copy ================\n\n\n    _this.onCopyClick = function () {\n      var _this$props = _this.props,\n          children = _this$props.children,\n          copyable = _this$props.copyable;\n\n      var copyConfig = _extends({}, _typeof(copyable) === 'object' ? copyable : null);\n\n      if (copyConfig.text === undefined) {\n        copyConfig.text = String(children);\n      }\n\n      copy(copyConfig.text || '');\n\n      _this.setState({\n        copied: true\n      }, function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n\n        _this.copyId = window.setTimeout(function () {\n          _this.setState({\n            copied: false\n          });\n        }, 3000);\n      });\n    };\n\n    _this.setEditRef = function (node) {\n      _this.editIcon = node;\n    };\n\n    _this.triggerEdit = function (edit) {\n      var _this$getEditable2 = _this.getEditable(),\n          onStart = _this$getEditable2.onStart;\n\n      if (edit && onStart) {\n        onStart();\n      }\n\n      _this.setState({\n        edit: edit\n      }, function () {\n        if (!edit && _this.editIcon) {\n          _this.editIcon.focus();\n        }\n      });\n    }; // ============== Ellipsis ==============\n\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.rafId);\n      _this.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        _this.syncEllipsis();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Base, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        clientRendered: true\n      });\n      this.resizeOnNextFrame();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var children = this.props.children;\n      var ellipsis = this.getEllipsis();\n      var prevEllipsis = this.getEllipsis(prevProps);\n\n      if (children !== prevProps.children || ellipsis.rows !== prevEllipsis.rows) {\n        this.resizeOnNextFrame();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this.copyId);\n      raf.cancel(this.rafId);\n    }\n  }, {\n    key: \"getEditable\",\n    value: function getEditable(props) {\n      var edit = this.state.edit;\n\n      var _ref2 = props || this.props,\n          editable = _ref2.editable;\n\n      if (!editable) return {\n        editing: edit\n      };\n      return _extends({\n        editing: edit\n      }, _typeof(editable) === 'object' ? editable : null);\n    }\n  }, {\n    key: \"getEllipsis\",\n    value: function getEllipsis(props) {\n      var _ref3 = props || this.props,\n          ellipsis = _ref3.ellipsis;\n\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    }\n  }, {\n    key: \"canUseCSSEllipsis\",\n    value: function canUseCSSEllipsis() {\n      var clientRendered = this.state.clientRendered;\n      var _this$props2 = this.props,\n          editable = _this$props2.editable,\n          copyable = _this$props2.copyable;\n\n      var _this$getEllipsis2 = this.getEllipsis(),\n          rows = _this$getEllipsis2.rows,\n          expandable = _this$getEllipsis2.expandable,\n          suffix = _this$getEllipsis2.suffix,\n          onEllipsis = _this$getEllipsis2.onEllipsis;\n\n      if (suffix) return false; // Can't use css ellipsis since we need to provide the place for button\n\n      if (editable || copyable || expandable || !clientRendered || onEllipsis) {\n        return false;\n      }\n\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n\n      return isLineClampSupport;\n    }\n  }, {\n    key: \"syncEllipsis\",\n    value: function syncEllipsis() {\n      var _this$state = this.state,\n          ellipsisText = _this$state.ellipsisText,\n          isEllipsis = _this$state.isEllipsis,\n          expanded = _this$state.expanded;\n\n      var _this$getEllipsis3 = this.getEllipsis(),\n          rows = _this$getEllipsis3.rows,\n          suffix = _this$getEllipsis3.suffix,\n          onEllipsis = _this$getEllipsis3.onEllipsis;\n\n      var children = this.props.children;\n      if (!rows || rows < 0 || !this.contentRef.current || expanded) return; // Do not measure if css already support ellipsis\n\n      if (this.canUseCSSEllipsis()) return;\n      devWarning(toArray(children).every(function (child) {\n        return typeof child === 'string';\n      }), 'Typography', '`ellipsis` should use string as children only.');\n\n      var _measure = measure(findDOMNode(this.contentRef.current), {\n        rows: rows,\n        suffix: suffix\n      }, children, this.renderOperations(true), ELLIPSIS_STR),\n          content = _measure.content,\n          text = _measure.text,\n          ellipsis = _measure.ellipsis;\n\n      if (ellipsisText !== text || isEllipsis !== ellipsis) {\n        this.setState({\n          ellipsisText: text,\n          ellipsisContent: content,\n          isEllipsis: ellipsis\n        });\n\n        if (isEllipsis !== ellipsis && onEllipsis) {\n          onEllipsis(ellipsis);\n        }\n      }\n    }\n  }, {\n    key: \"renderExpand\",\n    value: function renderExpand(forceRender) {\n      var _this$getEllipsis4 = this.getEllipsis(),\n          expandable = _this$getEllipsis4.expandable,\n          symbol = _this$getEllipsis4.symbol;\n\n      var _this$state2 = this.state,\n          expanded = _this$state2.expanded,\n          isEllipsis = _this$state2.isEllipsis;\n      if (!expandable) return null; // force render expand icon for measure usage or it will cause dead loop\n\n      if (!forceRender && (expanded || !isEllipsis)) return null;\n      var expandContent;\n\n      if (symbol) {\n        expandContent = symbol;\n      } else {\n        expandContent = this.expandStr;\n      }\n\n      return /*#__PURE__*/React.createElement(\"a\", {\n        key: \"expand\",\n        className: \"\".concat(this.getPrefixCls(), \"-expand\"),\n        onClick: this.onExpandClick,\n        \"aria-label\": this.expandStr\n      }, expandContent);\n    }\n  }, {\n    key: \"renderEdit\",\n    value: function renderEdit() {\n      var editable = this.props.editable;\n      if (!editable) return;\n      var icon = editable.icon,\n          tooltip = editable.tooltip;\n      var title = toArray(tooltip)[0] || this.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"edit\",\n        title: tooltip === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        ref: this.setEditRef,\n        className: \"\".concat(this.getPrefixCls(), \"-edit\"),\n        onClick: this.onEditClick,\n        \"aria-label\": ariaLabel\n      }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n        role: \"button\"\n      })));\n    }\n  }, {\n    key: \"renderCopy\",\n    value: function renderCopy() {\n      var copied = this.state.copied;\n      var copyable = this.props.copyable;\n      if (!copyable) return;\n      var prefixCls = this.getPrefixCls();\n      var tooltips = copyable.tooltips;\n      var tooltipNodes = toArray(tooltips);\n\n      if (tooltipNodes.length === 0) {\n        tooltipNodes = [this.copyStr, this.copiedStr];\n      }\n\n      var title = copied ? tooltipNodes[1] : tooltipNodes[0];\n      var ariaLabel = typeof title === 'string' ? title : '';\n      var icons = toArray(copyable.icon);\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"copy\",\n        title: tooltips === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n        onClick: this.onCopyClick,\n        \"aria-label\": ariaLabel\n      }, copied ? icons[1] || /*#__PURE__*/React.createElement(CheckOutlined, null) : icons[0] || /*#__PURE__*/React.createElement(CopyOutlined, null)));\n    }\n  }, {\n    key: \"renderEditInput\",\n    value: function renderEditInput() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          className = _this$props3.className,\n          style = _this$props3.style;\n      var direction = this.context.direction;\n\n      var _this$getEditable3 = this.getEditable(),\n          maxLength = _this$getEditable3.maxLength,\n          autoSize = _this$getEditable3.autoSize;\n\n      return /*#__PURE__*/React.createElement(Editable, {\n        value: typeof children === 'string' ? children : '',\n        onSave: this.onEditChange,\n        onCancel: this.onEditCancel,\n        prefixCls: this.getPrefixCls(),\n        className: className,\n        style: style,\n        direction: direction,\n        maxLength: maxLength,\n        autoSize: autoSize\n      });\n    }\n  }, {\n    key: \"renderOperations\",\n    value: function renderOperations(forceRenderExpanded) {\n      return [this.renderExpand(forceRenderExpanded), this.renderEdit(), this.renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          ellipsisContent = _this$state3.ellipsisContent,\n          isEllipsis = _this$state3.isEllipsis,\n          expanded = _this$state3.expanded;\n\n      var _a = this.props,\n          component = _a.component,\n          children = _a.children,\n          className = _a.className,\n          type = _a.type,\n          disabled = _a.disabled,\n          style = _a.style,\n          restProps = __rest(_a, [\"component\", \"children\", \"className\", \"type\", \"disabled\", \"style\"]);\n\n      var direction = this.context.direction;\n\n      var _this$getEllipsis5 = this.getEllipsis(),\n          rows = _this$getEllipsis5.rows,\n          suffix = _this$getEllipsis5.suffix;\n\n      var prefixCls = this.getPrefixCls();\n      var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard'].concat(_toConsumableArray(configConsumerProps)));\n      var cssEllipsis = this.canUseCSSEllipsis();\n      var cssTextOverflow = rows === 1 && cssEllipsis;\n      var cssLineClamp = rows && rows > 1 && cssEllipsis;\n      var textNode = children;\n      var ariaLabel; // Only use js ellipsis when css ellipsis not support\n\n      if (rows && isEllipsis && !expanded && !cssEllipsis) {\n        var title = restProps.title;\n        ariaLabel = title;\n\n        if (!title && (typeof children === 'string' || typeof children === 'number')) {\n          ariaLabel = String(children);\n        } // We move full content to outer element to avoid repeat read the content by accessibility\n\n\n        textNode = /*#__PURE__*/React.createElement(\"span\", {\n          title: ariaLabel,\n          \"aria-hidden\": \"true\"\n        }, ellipsisContent, ELLIPSIS_STR, suffix);\n      } else {\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, children, suffix);\n      }\n\n      textNode = wrapperDecorations(this.props, textNode);\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Text\"\n      }, function (_ref4) {\n        var _classNames;\n\n        var edit = _ref4.edit,\n            copyStr = _ref4.copy,\n            copied = _ref4.copied,\n            expand = _ref4.expand;\n        _this2.editStr = edit;\n        _this2.copyStr = copyStr;\n        _this2.copiedStr = copied;\n        _this2.expandStr = expand;\n        return /*#__PURE__*/React.createElement(ResizeObserver, {\n          onResize: _this2.resizeOnNextFrame,\n          disabled: !rows\n        }, /*#__PURE__*/React.createElement(Typography, _extends({\n          className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), rows), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n          style: _extends(_extends({}, style), {\n            WebkitLineClamp: cssLineClamp ? rows : null\n          }),\n          component: component,\n          ref: _this2.contentRef,\n          \"aria-label\": ariaLabel,\n          direction: direction\n        }, textProps), textNode, _this2.renderOperations()));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getEditable4 = this.getEditable(),\n          editing = _this$getEditable4.editing;\n\n      if (editing) {\n        return this.renderEditInput();\n      }\n\n      return this.renderContent();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var children = nextProps.children,\n          editable = nextProps.editable;\n      devWarning(!editable || typeof children === 'string', 'Typography', 'When `editable` is enabled, the `children` should use string.');\n      return {};\n    }\n  }]);\n\n  return Base;\n}(React.Component);\n\nBase.contextType = ConfigContext;\nBase.defaultProps = {\n  children: ''\n};\nexport default Base;","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_typeof","_extends","_classCallCheck","_createClass","_inherits","_createSuper","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","toArray","findDOMNode","copy","omit","EditOutlined","CheckOutlined","CopyOutlined","ResizeObserver","configConsumerProps","ConfigContext","LocaleReceiver","devWarning","TransButton","raf","isStyleSupport","Tooltip","Typography","Editable","measure","isLineClampSupport","isTextOverflowSupport","wrapperDecorations","_ref","content","mark","code","underline","del","strong","keyboard","currentContent","wrap","needed","tag","createElement","ELLIPSIS_STR","Base","_React$Component","_super","_this","apply","arguments","contentRef","createRef","state","edit","copied","ellipsisText","ellipsisContent","isEllipsis","expanded","clientRendered","getPrefixCls","customizePrefixCls","props","prefixCls","context","onExpandClick","_this$getEllipsis","getEllipsis","onExpand","setState","onEditClick","triggerEdit","onEditChange","value","_this$getEditable","getEditable","onChange","onEditCancel","onCopyClick","_this$props","children","copyable","copyConfig","text","undefined","String","onCopy","copyId","window","setTimeout","setEditRef","node","editIcon","_this$getEditable2","onStart","focus","resizeOnNextFrame","cancel","rafId","syncEllipsis","key","componentDidMount","componentDidUpdate","prevProps","ellipsis","prevEllipsis","rows","componentWillUnmount","clearTimeout","_ref2","editable","editing","_ref3","expandable","canUseCSSEllipsis","_this$props2","_this$getEllipsis2","suffix","onEllipsis","_this$state","_this$getEllipsis3","current","every","child","_measure","renderOperations","renderExpand","forceRender","_this$getEllipsis4","symbol","_this$state2","expandContent","expandStr","className","concat","onClick","renderEdit","icon","tooltip","title","editStr","ariaLabel","ref","role","renderCopy","tooltips","tooltipNodes","copyStr","copiedStr","icons","renderEditInput","_this$props3","style","direction","_this$getEditable3","maxLength","autoSize","onSave","onCancel","forceRenderExpanded","filter","renderContent","_this2","_this$state3","_a","component","type","disabled","restProps","_this$getEllipsis5","textProps","cssEllipsis","cssTextOverflow","cssLineClamp","textNode","Fragment","componentName","_ref4","_classNames","expand","onResize","WebkitLineClamp","render","_this$getEditable4","getDerivedStateFromProps","nextProps","Component","contextType","defaultProps"],"sources":["/Users/jiayue/7381-website/node_modules/antd/es/typography/Base.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport copy from 'copy-to-clipboard';\nimport omit from 'omit.js';\nimport EditOutlined from '@ant-design/icons/EditOutlined';\nimport CheckOutlined from '@ant-design/icons/CheckOutlined';\nimport CopyOutlined from '@ant-design/icons/CopyOutlined';\nimport ResizeObserver from 'rc-resize-observer';\nimport { configConsumerProps, ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport devWarning from '../_util/devWarning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport isStyleSupport from '../_util/styleChecker';\nimport Tooltip from '../tooltip';\nimport Typography from './Typography';\nimport Editable from './Editable';\nimport measure from './util';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  return currentContent;\n}\n\nvar ELLIPSIS_STR = '...';\n\nvar Base = /*#__PURE__*/function (_React$Component) {\n  _inherits(Base, _React$Component);\n\n  var _super = _createSuper(Base);\n\n  function Base() {\n    var _this;\n\n    _classCallCheck(this, Base);\n\n    _this = _super.apply(this, arguments);\n    _this.contentRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      edit: false,\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false\n    };\n\n    _this.getPrefixCls = function () {\n      var customizePrefixCls = _this.props.prefixCls;\n      var getPrefixCls = _this.context.getPrefixCls;\n      return getPrefixCls('typography', customizePrefixCls);\n    }; // =============== Expand ===============\n\n\n    _this.onExpandClick = function (e) {\n      var _this$getEllipsis = _this.getEllipsis(),\n          onExpand = _this$getEllipsis.onExpand;\n\n      _this.setState({\n        expanded: true\n      });\n\n      if (onExpand) {\n        onExpand(e);\n      }\n    }; // ================ Edit ================\n\n\n    _this.onEditClick = function () {\n      _this.triggerEdit(true);\n    };\n\n    _this.onEditChange = function (value) {\n      var _this$getEditable = _this.getEditable(),\n          onChange = _this$getEditable.onChange;\n\n      if (onChange) {\n        onChange(value);\n      }\n\n      _this.triggerEdit(false);\n    };\n\n    _this.onEditCancel = function () {\n      _this.triggerEdit(false);\n    }; // ================ Copy ================\n\n\n    _this.onCopyClick = function () {\n      var _this$props = _this.props,\n          children = _this$props.children,\n          copyable = _this$props.copyable;\n\n      var copyConfig = _extends({}, _typeof(copyable) === 'object' ? copyable : null);\n\n      if (copyConfig.text === undefined) {\n        copyConfig.text = String(children);\n      }\n\n      copy(copyConfig.text || '');\n\n      _this.setState({\n        copied: true\n      }, function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n\n        _this.copyId = window.setTimeout(function () {\n          _this.setState({\n            copied: false\n          });\n        }, 3000);\n      });\n    };\n\n    _this.setEditRef = function (node) {\n      _this.editIcon = node;\n    };\n\n    _this.triggerEdit = function (edit) {\n      var _this$getEditable2 = _this.getEditable(),\n          onStart = _this$getEditable2.onStart;\n\n      if (edit && onStart) {\n        onStart();\n      }\n\n      _this.setState({\n        edit: edit\n      }, function () {\n        if (!edit && _this.editIcon) {\n          _this.editIcon.focus();\n        }\n      });\n    }; // ============== Ellipsis ==============\n\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.rafId);\n      _this.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        _this.syncEllipsis();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Base, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        clientRendered: true\n      });\n      this.resizeOnNextFrame();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var children = this.props.children;\n      var ellipsis = this.getEllipsis();\n      var prevEllipsis = this.getEllipsis(prevProps);\n\n      if (children !== prevProps.children || ellipsis.rows !== prevEllipsis.rows) {\n        this.resizeOnNextFrame();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this.copyId);\n      raf.cancel(this.rafId);\n    }\n  }, {\n    key: \"getEditable\",\n    value: function getEditable(props) {\n      var edit = this.state.edit;\n\n      var _ref2 = props || this.props,\n          editable = _ref2.editable;\n\n      if (!editable) return {\n        editing: edit\n      };\n      return _extends({\n        editing: edit\n      }, _typeof(editable) === 'object' ? editable : null);\n    }\n  }, {\n    key: \"getEllipsis\",\n    value: function getEllipsis(props) {\n      var _ref3 = props || this.props,\n          ellipsis = _ref3.ellipsis;\n\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    }\n  }, {\n    key: \"canUseCSSEllipsis\",\n    value: function canUseCSSEllipsis() {\n      var clientRendered = this.state.clientRendered;\n      var _this$props2 = this.props,\n          editable = _this$props2.editable,\n          copyable = _this$props2.copyable;\n\n      var _this$getEllipsis2 = this.getEllipsis(),\n          rows = _this$getEllipsis2.rows,\n          expandable = _this$getEllipsis2.expandable,\n          suffix = _this$getEllipsis2.suffix,\n          onEllipsis = _this$getEllipsis2.onEllipsis;\n\n      if (suffix) return false; // Can't use css ellipsis since we need to provide the place for button\n\n      if (editable || copyable || expandable || !clientRendered || onEllipsis) {\n        return false;\n      }\n\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n\n      return isLineClampSupport;\n    }\n  }, {\n    key: \"syncEllipsis\",\n    value: function syncEllipsis() {\n      var _this$state = this.state,\n          ellipsisText = _this$state.ellipsisText,\n          isEllipsis = _this$state.isEllipsis,\n          expanded = _this$state.expanded;\n\n      var _this$getEllipsis3 = this.getEllipsis(),\n          rows = _this$getEllipsis3.rows,\n          suffix = _this$getEllipsis3.suffix,\n          onEllipsis = _this$getEllipsis3.onEllipsis;\n\n      var children = this.props.children;\n      if (!rows || rows < 0 || !this.contentRef.current || expanded) return; // Do not measure if css already support ellipsis\n\n      if (this.canUseCSSEllipsis()) return;\n      devWarning(toArray(children).every(function (child) {\n        return typeof child === 'string';\n      }), 'Typography', '`ellipsis` should use string as children only.');\n\n      var _measure = measure(findDOMNode(this.contentRef.current), {\n        rows: rows,\n        suffix: suffix\n      }, children, this.renderOperations(true), ELLIPSIS_STR),\n          content = _measure.content,\n          text = _measure.text,\n          ellipsis = _measure.ellipsis;\n\n      if (ellipsisText !== text || isEllipsis !== ellipsis) {\n        this.setState({\n          ellipsisText: text,\n          ellipsisContent: content,\n          isEllipsis: ellipsis\n        });\n\n        if (isEllipsis !== ellipsis && onEllipsis) {\n          onEllipsis(ellipsis);\n        }\n      }\n    }\n  }, {\n    key: \"renderExpand\",\n    value: function renderExpand(forceRender) {\n      var _this$getEllipsis4 = this.getEllipsis(),\n          expandable = _this$getEllipsis4.expandable,\n          symbol = _this$getEllipsis4.symbol;\n\n      var _this$state2 = this.state,\n          expanded = _this$state2.expanded,\n          isEllipsis = _this$state2.isEllipsis;\n      if (!expandable) return null; // force render expand icon for measure usage or it will cause dead loop\n\n      if (!forceRender && (expanded || !isEllipsis)) return null;\n      var expandContent;\n\n      if (symbol) {\n        expandContent = symbol;\n      } else {\n        expandContent = this.expandStr;\n      }\n\n      return /*#__PURE__*/React.createElement(\"a\", {\n        key: \"expand\",\n        className: \"\".concat(this.getPrefixCls(), \"-expand\"),\n        onClick: this.onExpandClick,\n        \"aria-label\": this.expandStr\n      }, expandContent);\n    }\n  }, {\n    key: \"renderEdit\",\n    value: function renderEdit() {\n      var editable = this.props.editable;\n      if (!editable) return;\n      var icon = editable.icon,\n          tooltip = editable.tooltip;\n      var title = toArray(tooltip)[0] || this.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"edit\",\n        title: tooltip === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        ref: this.setEditRef,\n        className: \"\".concat(this.getPrefixCls(), \"-edit\"),\n        onClick: this.onEditClick,\n        \"aria-label\": ariaLabel\n      }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n        role: \"button\"\n      })));\n    }\n  }, {\n    key: \"renderCopy\",\n    value: function renderCopy() {\n      var copied = this.state.copied;\n      var copyable = this.props.copyable;\n      if (!copyable) return;\n      var prefixCls = this.getPrefixCls();\n      var tooltips = copyable.tooltips;\n      var tooltipNodes = toArray(tooltips);\n\n      if (tooltipNodes.length === 0) {\n        tooltipNodes = [this.copyStr, this.copiedStr];\n      }\n\n      var title = copied ? tooltipNodes[1] : tooltipNodes[0];\n      var ariaLabel = typeof title === 'string' ? title : '';\n      var icons = toArray(copyable.icon);\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"copy\",\n        title: tooltips === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n        onClick: this.onCopyClick,\n        \"aria-label\": ariaLabel\n      }, copied ? icons[1] || /*#__PURE__*/React.createElement(CheckOutlined, null) : icons[0] || /*#__PURE__*/React.createElement(CopyOutlined, null)));\n    }\n  }, {\n    key: \"renderEditInput\",\n    value: function renderEditInput() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          className = _this$props3.className,\n          style = _this$props3.style;\n      var direction = this.context.direction;\n\n      var _this$getEditable3 = this.getEditable(),\n          maxLength = _this$getEditable3.maxLength,\n          autoSize = _this$getEditable3.autoSize;\n\n      return /*#__PURE__*/React.createElement(Editable, {\n        value: typeof children === 'string' ? children : '',\n        onSave: this.onEditChange,\n        onCancel: this.onEditCancel,\n        prefixCls: this.getPrefixCls(),\n        className: className,\n        style: style,\n        direction: direction,\n        maxLength: maxLength,\n        autoSize: autoSize\n      });\n    }\n  }, {\n    key: \"renderOperations\",\n    value: function renderOperations(forceRenderExpanded) {\n      return [this.renderExpand(forceRenderExpanded), this.renderEdit(), this.renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          ellipsisContent = _this$state3.ellipsisContent,\n          isEllipsis = _this$state3.isEllipsis,\n          expanded = _this$state3.expanded;\n\n      var _a = this.props,\n          component = _a.component,\n          children = _a.children,\n          className = _a.className,\n          type = _a.type,\n          disabled = _a.disabled,\n          style = _a.style,\n          restProps = __rest(_a, [\"component\", \"children\", \"className\", \"type\", \"disabled\", \"style\"]);\n\n      var direction = this.context.direction;\n\n      var _this$getEllipsis5 = this.getEllipsis(),\n          rows = _this$getEllipsis5.rows,\n          suffix = _this$getEllipsis5.suffix;\n\n      var prefixCls = this.getPrefixCls();\n      var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard'].concat(_toConsumableArray(configConsumerProps)));\n      var cssEllipsis = this.canUseCSSEllipsis();\n      var cssTextOverflow = rows === 1 && cssEllipsis;\n      var cssLineClamp = rows && rows > 1 && cssEllipsis;\n      var textNode = children;\n      var ariaLabel; // Only use js ellipsis when css ellipsis not support\n\n      if (rows && isEllipsis && !expanded && !cssEllipsis) {\n        var title = restProps.title;\n        ariaLabel = title;\n\n        if (!title && (typeof children === 'string' || typeof children === 'number')) {\n          ariaLabel = String(children);\n        } // We move full content to outer element to avoid repeat read the content by accessibility\n\n\n        textNode = /*#__PURE__*/React.createElement(\"span\", {\n          title: ariaLabel,\n          \"aria-hidden\": \"true\"\n        }, ellipsisContent, ELLIPSIS_STR, suffix);\n      } else {\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, children, suffix);\n      }\n\n      textNode = wrapperDecorations(this.props, textNode);\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Text\"\n      }, function (_ref4) {\n        var _classNames;\n\n        var edit = _ref4.edit,\n            copyStr = _ref4.copy,\n            copied = _ref4.copied,\n            expand = _ref4.expand;\n        _this2.editStr = edit;\n        _this2.copyStr = copyStr;\n        _this2.copiedStr = copied;\n        _this2.expandStr = expand;\n        return /*#__PURE__*/React.createElement(ResizeObserver, {\n          onResize: _this2.resizeOnNextFrame,\n          disabled: !rows\n        }, /*#__PURE__*/React.createElement(Typography, _extends({\n          className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), rows), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n          style: _extends(_extends({}, style), {\n            WebkitLineClamp: cssLineClamp ? rows : null\n          }),\n          component: component,\n          ref: _this2.contentRef,\n          \"aria-label\": ariaLabel,\n          direction: direction\n        }, textProps), textNode, _this2.renderOperations()));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getEditable4 = this.getEditable(),\n          editing = _this$getEditable4.editing;\n\n      if (editing) {\n        return this.renderEditInput();\n      }\n\n      return this.renderContent();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var children = nextProps.children,\n          editable = nextProps.editable;\n      devWarning(!editable || typeof children === 'string', 'Typography', 'When `editable` is enabled, the `children` should use string.');\n      return {};\n    }\n  }]);\n\n  return Base;\n}(React.Component);\n\nBase.contextType = ConfigContext;\nBase.defaultProps = {\n  children: ''\n};\nexport default Base;"],"mappings":"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"},"metadata":{},"sourceType":"module"}