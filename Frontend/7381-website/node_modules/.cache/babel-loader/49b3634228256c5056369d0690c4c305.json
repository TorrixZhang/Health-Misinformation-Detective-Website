{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\"; // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.destroyed = false;\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.listRef = React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragNodesKeys = _this$state2.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: convertNodePropsToEventData(node.props),\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state3 = _this.state,\n          _this$state3$dragNode = _this$state3.dragNodesKeys,\n          dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n          dropPosition = _this$state3.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props2 = node.props,\n          eventKey = _node$props2.eventKey,\n          pos = _node$props2.pos;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false\n        });\n      }\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state4 = _this.state,\n          keyEntities = _this$state4.keyEntities,\n          oriCheckedKeys = _this$state4.checkedKeys,\n          oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state5 = _this.state,\n                currentLoadedKeys = _this$state5.loadedKeys,\n                currentLoadingKeys = _this$state5.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state6 = _this.state,\n          expandedKeys = _this$state6.expandedKeys,\n          selectedKeys = _this$state6.selectedKeys,\n          loadedKeys = _this$state6.loadedKeys,\n          loadingKeys = _this$state6.loadingKeys,\n          checkedKeys = _this$state6.checkedKeys,\n          halfCheckedKeys = _this$state6.halfCheckedKeys,\n          dragOverNodeKey = _this$state6.dragOverNodeKey,\n          dropPosition = _this$state6.dropPosition,\n          keyEntities = _this$state6.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state7 = _this.state,\n          activeKey = _this$state7.activeKey,\n          flattenNodes = _this$state7.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state8 = _this.state,\n          flattenNodes = _this$state8.flattenNodes,\n          activeKey = _this$state8.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state9 = _this.state,\n          activeKey = _this$state9.activeKey,\n          expandedKeys = _this$state9.expandedKeys,\n          checkedKeys = _this$state9.checkedKeys;\n      var _this$props5 = _this.props,\n          onKeyDown = _this$props5.onKeyDown,\n          checkable = _this$props5.checkable,\n          selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.destroyed) {\n        return;\n      }\n\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state10 = this.state,\n          focused = _this$state10.focused,\n          flattenNodes = _this$state10.flattenNodes,\n          keyEntities = _this$state10.keyEntities,\n          dragging = _this$state10.dragging,\n          activeKey = _this$state10.activeKey;\n      var _this$props6 = this.props,\n          prefixCls = _this$props6.prefixCls,\n          className = _this$props6.className,\n          style = _this$props6.style,\n          showLine = _this$props6.showLine,\n          focusable = _this$props6.focusable,\n          _this$props6$tabIndex = _this$props6.tabIndex,\n          tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n          selectable = _this$props6.selectable,\n          showIcon = _this$props6.showIcon,\n          icon = _this$props6.icon,\n          switcherIcon = _this$props6.switcherIcon,\n          draggable = _this$props6.draggable,\n          checkable = _this$props6.checkable,\n          checkStrictly = _this$props6.checkStrictly,\n          disabled = _this$props6.disabled,\n          motion = _this$props6.motion,\n          loadData = _this$props6.loadData,\n          filterTreeNode = _this$props6.filterTreeNode,\n          height = _this$props6.height,\n          itemHeight = _this$props6.itemHeight,\n          virtual = _this$props6.virtual,\n          titleRender = _this$props6.titleRender,\n          onContextMenu = _this$props6.onContextMenu;\n      var domProps = getDataAndAria(this.props);\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, React.createElement(NodeList, Object.assign({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\nTree.TreeNode = TreeNode;\nexport default Tree;","map":{"version":3,"names":["_defineProperty","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_inherits","_createSuper","React","KeyCode","warning","classNames","TreeContext","getDataAndAria","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","Tree","_React$Component","_super","_this","apply","arguments","destroyed","state","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragNodesKeys","dragOverNodeKey","dropPosition","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","dragNode","newExpandedKeys","setState","setExpandedKeys","onNodeDragEnter","_this$state2","onDragEnter","_node$props","pos","indexOf","setTimeout","delayedDragEnterLogic","Object","keys","forEach","key","clearTimeout","window","entity","children","length","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","cleanDragState","onNodeDrop","_this$state3","_this$state3$dragNode","onDrop","_node$props2","posArr","dropResult","slice","Number","dropToGap","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","filter","setUncontrolledState","nativeEvent","onNodeCheck","checked","_this$state4","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","concat","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","Array","from","checkedNodesPositions","push","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props3","loadData","onLoad","promise","then","_this$state5","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","getTreeNodeRequiredProps","_this$state6","onNodeExpand","_this$props4","onExpand","expanded","index","targetExpanded","loadPromise","newFlattenTreeData","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","getActiveItem","_this$state7","find","_ref2","data","offsetActiveKey","offset","_this$state8","findIndex","_ref3","item","onKeyDown","_this$state9","_this$props5","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","active","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","undefined","forceState","needSync","allPassed","newState","name","scroll","current","value","componentWillUnmount","render","_classNames","_this$state10","_this$props6","prefixCls","className","style","showLine","focusable","_this$props6$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","onContextMenu","domProps","createElement","Provider","assign","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"sources":["/Users/jiayue/7381-website/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.destroyed = false;\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.listRef = React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragNodesKeys = _this$state2.dragNodesKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n      if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: convertNodePropsToEventData(node.props),\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var dragNodesKeys = _this.state.dragNodesKeys;\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        return;\n      } // Update drag position\n\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state3 = _this.state,\n          _this$state3$dragNode = _this$state3.dragNodesKeys,\n          dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n          dropPosition = _this$state3.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props2 = node.props,\n          eventKey = _node$props2.eventKey,\n          pos = _node$props2.pos;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      _this.cleanDragState();\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false\n        });\n      }\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state4 = _this.state,\n          keyEntities = _this$state4.keyEntities,\n          oriCheckedKeys = _this$state4.checkedKeys,\n          oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state5 = _this.state,\n                currentLoadedKeys = _this$state5.loadedKeys,\n                currentLoadingKeys = _this$state5.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state6 = _this.state,\n          expandedKeys = _this$state6.expandedKeys,\n          selectedKeys = _this$state6.selectedKeys,\n          loadedKeys = _this$state6.loadedKeys,\n          loadingKeys = _this$state6.loadingKeys,\n          checkedKeys = _this$state6.checkedKeys,\n          halfCheckedKeys = _this$state6.halfCheckedKeys,\n          dragOverNodeKey = _this$state6.dragOverNodeKey,\n          dropPosition = _this$state6.dropPosition,\n          keyEntities = _this$state6.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state7 = _this.state,\n          activeKey = _this$state7.activeKey,\n          flattenNodes = _this$state7.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state8 = _this.state,\n          flattenNodes = _this$state8.flattenNodes,\n          activeKey = _this$state8.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state9 = _this.state,\n          activeKey = _this$state9.activeKey,\n          expandedKeys = _this$state9.expandedKeys,\n          checkedKeys = _this$state9.checkedKeys;\n      var _this$props5 = _this.props,\n          onKeyDown = _this$props5.onKeyDown,\n          checkable = _this$props5.checkable,\n          selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.destroyed) {\n        return;\n      }\n\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state10 = this.state,\n          focused = _this$state10.focused,\n          flattenNodes = _this$state10.flattenNodes,\n          keyEntities = _this$state10.keyEntities,\n          dragging = _this$state10.dragging,\n          activeKey = _this$state10.activeKey;\n      var _this$props6 = this.props,\n          prefixCls = _this$props6.prefixCls,\n          className = _this$props6.className,\n          style = _this$props6.style,\n          showLine = _this$props6.showLine,\n          focusable = _this$props6.focusable,\n          _this$props6$tabIndex = _this$props6.tabIndex,\n          tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n          selectable = _this$props6.selectable,\n          showIcon = _this$props6.showIcon,\n          icon = _this$props6.icon,\n          switcherIcon = _this$props6.switcherIcon,\n          draggable = _this$props6.draggable,\n          checkable = _this$props6.checkable,\n          checkStrictly = _this$props6.checkStrictly,\n          disabled = _this$props6.disabled,\n          motion = _this$props6.motion,\n          loadData = _this$props6.loadData,\n          filterTreeNode = _this$props6.filterTreeNode,\n          height = _this$props6.height,\n          itemHeight = _this$props6.itemHeight,\n          virtual = _this$props6.virtual,\n          titleRender = _this$props6.titleRender,\n          onContextMenu = _this$props6.onContextMenu;\n      var domProps = getDataAndAria(this.props);\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, React.createElement(NodeList, Object.assign({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\nTree.TreeNode = TreeNode;\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module"}